// Test logic l·ªçc giao d·ªãch chi ti·∫øt
// File n√†y ƒë·ªÉ test logic l·ªçc giao d·ªãch trong HomePage v·ªõi c√°c tr∆∞·ªùng h·ª£p c·ª• th·ªÉ

// Mock data: danh s√°ch giao d·ªãch t·ª´ API (gi·∫£ l·∫≠p d·ªØ li·ªáu th·ª±c t·∫ø)
const mockTransactions = [
  // Giao d·ªãch li√™n quan ƒë·∫øn User A (ID: 101)
  {
    id_giao_dich: 1,
    id_loai_giao_dich: 1, // Giao l·ªãch
    id_nguoi_gui: 101, // User A l√† ng∆∞·ªùi giao l·ªãch
    id_nguoi_nhan: 102, // User B l√† ng∆∞·ªùi nh·∫≠n l·ªãch
    noi_dung: 'Giao l·ªãch xe cho User B',
    trang_thai: 'cho_xac_nhan'
  },
  {
    id_giao_dich: 2,
    id_loai_giao_dich: 2, // Nh·∫≠n l·ªãch
    id_nguoi_gui: 102, // User B l√† ng∆∞·ªùi giao l·ªãch
    id_nguoi_nhan: 101, // User A l√† ng∆∞·ªùi nh·∫≠n l·ªãch
    noi_dung: 'Nh·∫≠n l·ªãch xe t·ª´ User B',
    trang_thai: 'cho_xac_nhan'
  },
  {
    id_giao_dich: 3,
    id_loai_giao_dich: 4, // San cho
    id_nguoi_gui: 101, // User A l√† ng∆∞·ªùi san cho
    id_nguoi_nhan: 103, // User C l√† ng∆∞·ªùi nh·∫≠n san
    noi_dung: 'San cho User C',
    trang_thai: 'hoan_thanh'
  },
  {
    id_giao_dich: 4,
    id_loai_giao_dich: 5, // Nh·∫≠n san
    id_nguoi_gui: 103, // User C l√† ng∆∞·ªùi san cho
    id_nguoi_nhan: 101, // User A l√† ng∆∞·ªùi nh·∫≠n san
    noi_dung: 'Nh·∫≠n san t·ª´ User C',
    trang_thai: 'hoan_thanh'
  },
  
  // Giao d·ªãch KH√îNG li√™n quan ƒë·∫øn User A
  {
    id_giao_dich: 5,
    id_loai_giao_dich: 1, // Giao l·ªãch
    id_nguoi_gui: 104, // User D l√† ng∆∞·ªùi giao l·ªãch
    id_nguoi_nhan: 105, // User E l√† ng∆∞·ªùi nh·∫≠n l·ªãch
    noi_dung: 'Giao l·ªãch xe cho User E',
    trang_thai: 'cho_xac_nhan'
  },
  {
    id_giao_dich: 6,
    id_loai_giao_dich: 4, // San cho
    id_nguoi_gui: 106, // User F l√† ng∆∞·ªùi san cho
    id_nguoi_nhan: 107, // User G l√† ng∆∞·ªùi nh·∫≠n san
    noi_dung: 'San cho User G',
    trang_thai: 'hoan_thanh'
  },
  {
    id_giao_dich: 7,
    id_loai_giao_dich: 2, // Nh·∫≠n l·ªãch
    id_nguoi_gui: 108, // User H l√† ng∆∞·ªùi giao l·ªãch
    id_nguoi_nhan: 109, // User I l√† ng∆∞·ªùi nh·∫≠n l·ªãch
    noi_dung: 'Nh·∫≠n l·ªãch xe t·ª´ User H',
    trang_thai: 'cho_xac_nhan'
  }
];

// Mock user (User A - ID 101)
const mockUser = {
  id_nguoi_dung: 101,
  la_admin: 0
};

// Logic l·ªçc giao d·ªãch (copy t·ª´ HomePage)
function filterTransactionsForUser(transactions, user) {
  if (user.la_admin === 1 || user.la_admin === true) {
    return transactions; // Admin th·∫•y t·∫•t c·∫£
  }
  
  console.log('üîç === FILTERING TRANSACTIONS FOR USER ===');
  console.log('üîç User ID:', user.id_nguoi_dung);
  console.log('üîç Total transactions before filtering:', transactions.length);
  
  // Log t·ª´ng giao d·ªãch ƒë·ªÉ debug
  transactions.forEach((transaction, index) => {
    const userIsSender = transaction.id_nguoi_gui === user.id_nguoi_dung;
    const userIsReceiver = transaction.id_nguoi_nhan === user.id_nguoi_dung;
    
    const shouldShow = (
      (transaction.id_loai_giao_dich === 1 && userIsSender) || // Giao l·ªãch - user l√† ng∆∞·ªùi giao
      (transaction.id_loai_giao_dich === 2 && userIsReceiver) || // Nh·∫≠n l·ªãch - user l√† ng∆∞·ªùi nh·∫≠n
      (transaction.id_loai_giao_dich === 4 && userIsSender) || // San cho - user l√† ng∆∞·ªùi san
      (transaction.id_loai_giao_dich === 5 && userIsReceiver)    // Nh·∫≠n san - user l√† ng∆∞·ªùi nh·∫≠n
    );
    
    console.log(`üîç Transaction ${index + 1}:`, {
      id: transaction.id_giao_dich,
      type: transaction.id_loai_giao_dich,
      typeName: getTransactionTypeName(transaction.id_loai_giao_dich),
      sender: transaction.id_nguoi_gui,
      receiver: transaction.id_nguoi_nhan,
      userIsSender: userIsSender,
      userIsReceiver: userIsReceiver,
      shouldShow: shouldShow,
      reason: getShowReason(transaction, user)
    });
  });
  
  // User th∆∞·ªùng: ch·ªâ th·∫•y giao d·ªãch li√™n quan
  const filteredTransactions = transactions.filter(transaction => {
    return (
      (transaction.id_loai_giao_dich === 1 && transaction.id_nguoi_gui === user.id_nguoi_dung) || // Giao l·ªãch - user l√† ng∆∞·ªùi giao
      (transaction.id_loai_giao_dich === 2 && transaction.id_nguoi_nhan === user.id_nguoi_dung) || // Nh·∫≠n l·ªãch - user l√† ng∆∞·ªùi nh·∫≠n
      (transaction.id_loai_giao_dich === 4 && transaction.id_nguoi_gui === user.id_nguoi_dung) || // San cho - user l√† ng∆∞·ªùi san
      (transaction.id_loai_giao_dich === 5 && transaction.id_nguoi_nhan === user.id_nguoi_dung)    // Nh·∫≠n san - user l√† ng∆∞·ªùi nh·∫≠n
    )
  });
  
  console.log('üîç Filtered transactions for user:', filteredTransactions.length, 'out of', transactions.length);
  
  // Log giao d·ªãch ƒë√£ ƒë∆∞·ª£c l·ªçc
  filteredTransactions.forEach((transaction, index) => {
    let role = '';
    if (transaction.id_loai_giao_dich === 1 && transaction.id_nguoi_gui === user.id_nguoi_dung) role = 'Ng∆∞·ªùi giao l·ªãch';
    else if (transaction.id_loai_giao_dich === 2 && transaction.id_nguoi_nhan === user.id_nguoi_dung) role = 'Ng∆∞·ªùi nh·∫≠n l·ªãch';
    else if (transaction.id_loai_giao_dich === 4 && transaction.id_nguoi_gui === user.id_nguoi_dung) role = 'Ng∆∞·ªùi san cho';
    else if (transaction.id_loai_giao_dich === 5 && transaction.id_nguoi_nhan === user.id_nguoi_dung) role = 'Ng∆∞·ªùi nh·∫≠n san';
    
    console.log(`üîç Filtered Transaction ${index + 1}:`, {
      id: transaction.id_giao_dich,
      type: transaction.id_loai_giao_dich,
      typeName: getTransactionTypeName(transaction.id_loai_giao_dich),
      role: role,
      content: transaction.noi_dung
    });
  });
  
  return filteredTransactions;
}

// Helper functions
function getTransactionTypeName(typeId) {
  switch (typeId) {
    case 1: return 'Giao l·ªãch';
    case 2: return 'Nh·∫≠n l·ªãch';
    case 4: return 'San cho';
    case 5: return 'Nh·∫≠n san';
    default: return 'Kh√°c';
  }
}

function getShowReason(transaction, user) {
  if (transaction.id_loai_giao_dich === 1 && transaction.id_nguoi_gui === user.id_nguoi_dung) {
    return 'User l√† ng∆∞·ªùi giao l·ªãch (ng∆∞·ªùi g·ª≠i)';
  } else if (transaction.id_loai_giao_dich === 2 && transaction.id_nguoi_nhan === user.id_nguoi_dung) {
    return 'User l√† ng∆∞·ªùi nh·∫≠n l·ªãch (ng∆∞·ªùi nh·∫≠n)';
  } else if (transaction.id_loai_giao_dich === 4 && transaction.id_nguoi_gui === user.id_nguoi_dung) {
    return 'User l√† ng∆∞·ªùi san cho (ng∆∞·ªùi g·ª≠i)';
  } else if (transaction.id_loai_giao_dich === 5 && transaction.id_nguoi_nhan === user.id_nguoi_dung) {
    return 'User l√† ng∆∞·ªùi nh·∫≠n san (ng∆∞·ªùi nh·∫≠n)';
  } else {
    return 'User kh√¥ng li√™n quan ƒë·∫øn giao d·ªãch n√†y';
  }
}

// Test cases
console.log('=== Test Logic L·ªçc Giao D·ªãch Chi Ti·∫øt ===\n');

console.log('1. Mock User:', mockUser);
console.log('2. T·ªïng s·ªë giao d·ªãch:', mockTransactions.length);
console.log('3. Danh s√°ch giao d·ªãch g·ªëc:');
mockTransactions.forEach(t => {
  console.log(`   - ID: ${t.id_giao_dich}, Lo·∫°i: ${t.id_loai_giao_dich} (${getTransactionTypeName(t.id_loai_giao_dich)}), G·ª≠i: ${t.id_nguoi_gui}, Nh·∫≠n: ${t.id_nguoi_nhan}, N·ªôi dung: ${t.noi_dung}`);
});

console.log('\n4. L·ªçc giao d·ªãch cho User A (ID: 101):');
const filteredTransactions = filterTransactionsForUser(mockTransactions, mockUser);

console.log('\n5. Ki·ªÉm tra logic chi ti·∫øt:');
console.log(`   - Giao l·ªãch (ID=1): User A l√† ng∆∞·ªùi g·ª≠i ‚Üí ${filteredTransactions.some(t => t.id_giao_dich === 1) ? '‚úÖ Hi·ªÉn th·ªã' : '‚ùå Kh√¥ng hi·ªÉn th·ªã'}`);
console.log(`   - Nh·∫≠n l·ªãch (ID=2): User A l√† ng∆∞·ªùi nh·∫≠n ‚Üí ${filteredTransactions.some(t => t.id_giao_dich === 2) ? '‚úÖ Hi·ªÉn th·ªã' : '‚ùå Kh√¥ng hi·ªÉn th·ªã'}`);
console.log(`   - San cho (ID=3): User A l√† ng∆∞·ªùi g·ª≠i ‚Üí ${filteredTransactions.some(t => t.id_giao_dich === 3) ? '‚úÖ Hi·ªÉn th·ªã' : '‚ùå Kh√¥ng hi·ªÉn th·ªã'}`);
console.log(`   - Nh·∫≠n san (ID=4): User A l√† ng∆∞·ªùi nh·∫≠n ‚Üí ${filteredTransactions.some(t => t.id_giao_dich === 4) ? '‚úÖ Hi·ªÉn th·ªã' : '‚ùå Kh√¥ng hi·ªÉn th·ªã'}`);
console.log(`   - Giao l·ªãch kh√°c (ID=5): User A kh√¥ng li√™n quan ‚Üí ${filteredTransactions.some(t => t.id_giao_dich === 5) ? '‚ùå Hi·ªÉn th·ªã (sai)' : '‚úÖ Kh√¥ng hi·ªÉn th·ªã (ƒë√∫ng)'}`);
console.log(`   - San cho kh√°c (ID=6): User A kh√¥ng li√™n quan ‚Üí ${filteredTransactions.some(t => t.id_giao_dich === 6) ? '‚ùå Hi·ªÉn th·ªã (sai)' : '‚úÖ Kh√¥ng hi·ªÉn th·ªã (ƒë√∫ng)'}`);
console.log(`   - Nh·∫≠n l·ªãch kh√°c (ID=7): User A kh√¥ng li√™n quan ‚Üí ${filteredTransactions.some(t => t.id_giao_dich === 7) ? '‚ùå Hi·ªÉn th·ªã (sai)' : '‚úÖ Kh√¥ng hi·ªÉn th·ªã (ƒë√∫ng)'}`);

console.log('\n6. T√≥m t·∫Øt k·∫øt qu·∫£:');
console.log(`   - Giao d·ªãch hi·ªÉn th·ªã: ${filteredTransactions.length}`);
console.log(`   - Giao d·ªãch b·ªã ·∫©n: ${mockTransactions.length - filteredTransactions.length}`);
console.log(`   - T·ª∑ l·ªá l·ªçc: ${((mockTransactions.length - filteredTransactions.length) / mockTransactions.length * 100).toFixed(1)}%`);

console.log('\n=== Test ho√†n th√†nh ===');
