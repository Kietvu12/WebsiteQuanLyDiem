const axios = require('axios');

const API_BASE_URL = 'http://localhost:5000/api';

// Test data
const testUsers = [
  {
    ten_dang_nhap: 'admin',
    mat_khau: 'admin123',
    name: 'Admin User'
  },
  {
    ten_dang_nhap: 'user1',
    mat_khau: 'user123',
    name: 'User 1'
  },
  {
    ten_dang_nhap: 'user2',
    mat_khau: 'user123',
    name: 'User 2'
  }
];

let tokens = {};

async function testNotifications() {
  console.log('=== TEST TH√îNG B√ÅO ===\n');

  try {
    // 1. ƒêƒÉng nh·∫≠p t·∫•t c·∫£ users
    console.log('1. ƒêƒÉng nh·∫≠p users...');
    for (const user of testUsers) {
      const loginResponse = await axios.post(`${API_BASE_URL}/users/login`, {
        ten_dang_nhap: user.ten_dang_nhap,
        mat_khau: user.mat_khau
      });
      
      if (loginResponse.data.success) {
        tokens[user.ten_dang_nhap] = loginResponse.data.data.token;
        console.log(`‚úÖ ${user.name} ƒëƒÉng nh·∫≠p th√†nh c√¥ng`);
      } else {
        console.log(`‚ùå ${user.name} ƒëƒÉng nh·∫≠p th·∫•t b·∫°i:`, loginResponse.data.message);
      }
    }

    // 2. Ki·ªÉm tra th√¥ng b√°o ban ƒë·∫ßu c·ªßa m·ªói user
    console.log('\n2. Ki·ªÉm tra th√¥ng b√°o ban ƒë·∫ßu...');
    for (const user of testUsers) {
      if (tokens[user.ten_dang_nhap]) {
        try {
          const notificationsResponse = await axios.get(`${API_BASE_URL}/notifications`, {
            headers: { Authorization: `Bearer ${tokens[user.ten_dang_nhap]}` }
          });
          
          if (notificationsResponse.data.success) {
            console.log(`üìã ${user.name} c√≥ ${notificationsResponse.data.data.length} th√¥ng b√°o`);
            if (notificationsResponse.data.data.length > 0) {
              console.log('   Th√¥ng b√°o ƒë·∫ßu ti√™n:', notificationsResponse.data.data[0].noi_dung);
            }
          } else {
            console.log(`‚ùå ${user.name} kh√¥ng th·ªÉ l·∫•y th√¥ng b√°o:`, notificationsResponse.data.message);
          }
        } catch (error) {
          console.log(`‚ùå ${user.name} l·ªói khi l·∫•y th√¥ng b√°o:`, error.response?.data || error.message);
        }
      }
    }

    // 3. T·∫°o giao d·ªãch giao l·ªãch t·ª´ user1 ƒë·∫øn user2
    console.log('\n3. T·∫°o giao d·ªãch giao l·ªãch...');
    if (tokens.user1) {
      try {
        // L·∫•y danh s√°ch nh√≥m
        const groupsResponse = await axios.get(`${API_BASE_URL}/groups`, {
          headers: { Authorization: `Bearer ${tokens.user1}` }
        });
        
        if (groupsResponse.data.success && groupsResponse.data.data.length > 0) {
          const groupId = groupsResponse.data.data[0].id_nhom;
          console.log('‚úÖ L·∫•y nh√≥m th√†nh c√¥ng, ID:', groupId);
          
          // L·∫•y th√†nh vi√™n nh√≥m
          const membersResponse = await axios.get(`${API_BASE_URL}/groups/${groupId}/members`, {
            headers: { Authorization: `Bearer ${tokens.user1}` }
          });
          
          if (membersResponse.data.success && membersResponse.data.data.length > 0) {
            // T√¨m user2 trong nh√≥m
            const user2Member = membersResponse.data.data.find(m => m.ten_dang_nhap === 'user2');
            if (user2Member) {
              console.log('‚úÖ T√¨m th·∫•y user2 trong nh√≥m, ID:', user2Member.id_nguoi_dung);
              
              // T·∫°o l·ªãch xe
              const scheduleResponse = await axios.post(`${API_BASE_URL}/schedules`, {
                id_loai_xe: 1,
                id_loai_tuyen: 1,
                thoi_gian_bat_dau_don: '2024-12-25T08:00:00',
                thoi_gian_ket_thuc_don: '2024-12-25T09:00:00',
                thoi_gian_bat_dau_tra: '2024-12-25T17:00:00',
                thoi_gian_ket_thuc_tra: '2024-12-25T18:00:00',
                id_nhom: groupId,
                id_nguoi_nhan: user2Member.id_nguoi_dung
              }, {
                headers: { Authorization: `Bearer ${tokens.user1}` }
              });
              
              if (scheduleResponse.data.success) {
                const scheduleId = scheduleResponse.data.data.id;
                console.log('‚úÖ T·∫°o l·ªãch xe th√†nh c√¥ng, ID:', scheduleId);
                
                // T·∫°o giao d·ªãch
                const transactionResponse = await axios.post(`${API_BASE_URL}/transactions`, {
                  id_loai_giao_dich: 1,
                  id_nguoi_nhan: user2Member.id_nguoi_dung,
                  id_nhom: groupId,
                  id_lich_xe: scheduleId,
                  so_tien: 50000,
                  diem: 10,
                  noi_dung: 'Giao l·ªãch xe ƒëi c√¥ng t√°c'
                }, {
                  headers: { Authorization: `Bearer ${tokens.user1}` }
                });
                
                if (transactionResponse.data.success) {
                  const transactionId = transactionResponse.data.data.id;
                  console.log('‚úÖ T·∫°o giao d·ªãch th√†nh c√¥ng, ID:', transactionId);
                  
                  // 4. Ki·ªÉm tra th√¥ng b√°o sau khi t·∫°o giao d·ªãch
                  console.log('\n4. Ki·ªÉm tra th√¥ng b√°o sau khi t·∫°o giao d·ªãch...');
                  
                  // Ki·ªÉm tra th√¥ng b√°o c·ªßa user2 (ng∆∞·ªùi nh·∫≠n)
                  const user2Notifications = await axios.get(`${API_BASE_URL}/notifications`, {
                    headers: { Authorization: `Bearer ${tokens.user2}` }
                  });
                  
                  if (user2Notifications.data.success) {
                    console.log(`üìã User2 c√≥ ${user2Notifications.data.data.length} th√¥ng b√°o`);
                    const newNotifications = user2Notifications.data.data.filter(n => 
                      n.noi_dung.includes('l·ªãch xe m·ªõi') || n.noi_dung.includes('giao d·ªãch')
                    );
                    if (newNotifications.length > 0) {
                      console.log('‚úÖ T√¨m th·∫•y th√¥ng b√°o m·ªõi:');
                      newNotifications.forEach((n, index) => {
                        console.log(`  ${index + 1}. ID: ${n.id_thong_bao}, N·ªôi dung: "${n.noi_dung}"`);
                      });
                    } else {
                      console.log('‚ö†Ô∏è Kh√¥ng t√¨m th·∫•y th√¥ng b√°o m·ªõi');
                    }
                  }
                  
                  // Ki·ªÉm tra th√¥ng b√°o c·ªßa user1 (ng∆∞·ªùi g·ª≠i)
                  const user1Notifications = await axios.get(`${API_BASE_URL}/notifications`, {
                    headers: { Authorization: `Bearer ${tokens.user1}` }
                  });
                  
                  if (user1Notifications.data.success) {
                    console.log(`üìã User1 c√≥ ${user1Notifications.data.data.length} th√¥ng b√°o`);
                    const senderNotifications = user1Notifications.data.data.filter(n => 
                      n.noi_dung.includes('giao d·ªãch giao l·ªãch th√†nh c√¥ng')
                    );
                    if (senderNotifications.length > 0) {
                      console.log('‚úÖ T√¨m th·∫•y th√¥ng b√°o cho ng∆∞·ªùi g·ª≠i:');
                      senderNotifications.forEach((n, index) => {
                        console.log(`  ${index + 1}. ID: ${n.id_thong_bao}, N·ªôi dung: "${n.noi_dung}"`);
                      });
                    } else {
                      console.log('‚ö†Ô∏è Kh√¥ng t√¨m th·∫•y th√¥ng b√°o cho ng∆∞·ªùi g·ª≠i');
                    }
                  }
                  
                } else {
                  console.log('‚ùå T·∫°o giao d·ªãch th·∫•t b·∫°i:', transactionResponse.data.message);
                }
              } else {
                console.log('‚ùå T·∫°o l·ªãch xe th·∫•t b·∫°i:', scheduleResponse.data.message);
              }
            } else {
              console.log('‚ùå Kh√¥ng t√¨m th·∫•y user2 trong nh√≥m');
            }
          } else {
            console.log('‚ùå Kh√¥ng th·ªÉ l·∫•y th√†nh vi√™n nh√≥m:', membersResponse.data.message);
          }
        } else {
          console.log('‚ùå Kh√¥ng th·ªÉ l·∫•y danh s√°ch nh√≥m:', groupsResponse.data.message);
        }
      } catch (error) {
        console.log('‚ùå L·ªói khi t·∫°o giao d·ªãch:', error.response?.data || error.message);
      }
    }

    // 5. Ki·ªÉm tra database tr·ª±c ti·∫øp
    console.log('\n5. Ki·ªÉm tra database tr·ª±c ti·∫øp...');
    console.log('H√£y ki·ªÉm tra b·∫£ng thong_bao trong database:');
    console.log('SELECT * FROM thong_bao ORDER BY ngay_tao DESC LIMIT 10;');

  } catch (error) {
    console.error('‚ùå L·ªói chung:', error.message);
  }
}

// Ch·∫°y test
testNotifications();
