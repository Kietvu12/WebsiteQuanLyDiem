const axios = require('axios');

const BASE_URL = 'http://localhost:5000/api';
let authToken = '';

// Test ƒëƒÉng nh·∫≠p
async function testLogin() {
  console.log('üîê Test ƒëƒÉng nh·∫≠p...');
  try {
    const response = await axios.post(`${BASE_URL}/users/login`, {
      ten_dang_nhap: 'admin',
      mat_khau: 'Admin@123'
    });

    if (response.data.success) {
      authToken = response.data.data.token;
      console.log('‚úÖ ƒêƒÉng nh·∫≠p th√†nh c√¥ng:', response.data.data.user.ho_ten);
      console.log('üîë Token:', authToken.substring(0, 50) + '...');
    } else {
      console.log('‚ùå ƒêƒÉng nh·∫≠p th·∫•t b·∫°i:', response.data.message);
    }
  } catch (error) {
    console.error('‚ùå L·ªói ƒëƒÉng nh·∫≠p:', error.response?.data?.message || error.message);
  }
  console.log('');
}

// Test l·∫•y th√¥ng tin c√° nh√¢n
async function testGetProfile() {
  console.log('üë§ Test l·∫•y th√¥ng tin c√° nh√¢n...');
  try {
    const response = await axios.get(`${BASE_URL}/users/profile`, {
      headers: { Authorization: `Bearer ${authToken}` }
    });

    if (response.data.success) {
      console.log('‚úÖ L·∫•y th√¥ng tin c√° nh√¢n th√†nh c√¥ng:', response.data.data.ho_ten);
    } else {
      console.log('‚ùå L·∫•y th√¥ng tin c√° nh√¢n th·∫•t b·∫°i:', response.data.message);
    }
  } catch (error) {
    console.error('‚ùå L·ªói l·∫•y th√¥ng tin c√° nh√¢n:', error.response?.data?.message || error.message);
  }
  console.log('');
}

// Test l·∫•y t·∫•t c·∫£ nh√≥m
async function testGetGroups() {
  console.log('üë• Test l·∫•y t·∫•t c·∫£ nh√≥m...');
  try {
    const response = await axios.get(`${BASE_URL}/groups`, {
      headers: { Authorization: `Bearer ${authToken}` }
    });

    if (response.data.success) {
      console.log('‚úÖ L·∫•y danh s√°ch nh√≥m th√†nh c√¥ng:', response.data.data.length, 'nh√≥m');
      response.data.data.forEach(group => {
        console.log(`  - ${group.ten_nhom}: ${group.mo_ta}`);
      });
    } else {
      console.log('‚ùå L·∫•y danh s√°ch nh√≥m th·∫•t b·∫°i:', response.data.message);
    }
  } catch (error) {
    console.error('‚ùå L·ªói l·∫•y danh s√°ch nh√≥m:', error.response?.data?.message || error.message);
  }
  console.log('');
}

// Test l·∫•y giao d·ªãch trong nh√≥m
async function testGetGroupTransactions() {
  console.log('üí∞ Test l·∫•y giao d·ªãch trong nh√≥m...');
  try {
    const response = await axios.get(`${BASE_URL}/groups/1/transactions`, {
      headers: { Authorization: `Bearer ${authToken}` }
    });

    if (response.data.success) {
      console.log('‚úÖ L·∫•y giao d·ªãch trong nh√≥m th√†nh c√¥ng:', response.data.data.length, 'giao d·ªãch');
      response.data.data.forEach(transaction => {
        console.log(`  - ${transaction.noi_dung} (${transaction.trang_thai})`);
      });
    } else {
      console.log('‚ùå L·∫•y giao d·ªãch trong nh√≥m th·∫•t b·∫°i:', response.data.message);
    }
  } catch (error) {
    console.error('‚ùå L·ªói l·∫•y giao d·ªãch trong nh√≥m:', error.response?.data?.message || error.message);
  }
  console.log('');
}

// Test l·∫•y l·ªãch xe trong nh√≥m
async function testGetGroupSchedules() {
  console.log('üöó Test l·∫•y l·ªãch xe trong nh√≥m...');
  try {
    const response = await axios.get(`${BASE_URL}/groups/1/schedules`, {
      headers: { Authorization: `Bearer ${authToken}` }
    });

    if (response.data.success) {
      console.log('‚úÖ L·∫•y l·ªãch xe trong nh√≥m th√†nh c√¥ng:', response.data.data.length, 'l·ªãch xe');
      response.data.data.forEach(schedule => {
        console.log(`  - ${schedule.ten_loai_xe} - ${schedule.ten_loai_tuyen} (${schedule.trang_thai})`);
      });
    } else {
      console.log('‚ùå L·∫•y l·ªãch xe trong nh√≥m th·∫•t b·∫°i:', response.data.message);
    }
  } catch (error) {
    console.error('‚ùå L·ªói l·∫•y l·ªãch xe trong nh√≥m:', error.response?.data?.message || error.message);
  }
  console.log('');
}

// Test t·∫°o giao d·ªãch m·ªõi
async function testCreateTransaction() {
  console.log('üí∏ Test t·∫°o giao d·ªãch m·ªõi...');
  try {
    const response = await axios.post(`${BASE_URL}/transactions`, {
      id_loai_giao_dich: 4, // San cho
      id_nguoi_nhan: 3,
      id_nhom: 1,
      diem: 10,
      noi_dung: 'Test san cho 10 ƒëi·ªÉm'
    }, {
      headers: { Authorization: `Bearer ${authToken}` }
    });

    if (response.data.success) {
      console.log('‚úÖ T·∫°o giao d·ªãch th√†nh c√¥ng, ID:', response.data.data.id);
    } else {
      console.log('‚ùå T·∫°o giao d·ªãch th·∫•t b·∫°i:', response.data.message);
    }
  } catch (error) {
    console.error('‚ùå L·ªói t·∫°o giao d·ªãch:', error.response?.data?.message || error.message);
  }
  console.log('');
}

// Test l·∫•y t·∫•t c·∫£ giao d·ªãch
async function testGetAllTransactions() {
  console.log('üìä Test l·∫•y t·∫•t c·∫£ giao d·ªãch...');
  try {
    const response = await axios.get(`${BASE_URL}/transactions`, {
      headers: { Authorization: `Bearer ${authToken}` }
    });

    if (response.data.success) {
      console.log('‚úÖ L·∫•y t·∫•t c·∫£ giao d·ªãch th√†nh c√¥ng:', response.data.data.length, 'giao d·ªãch');
    } else {
      console.log('‚ùå L·∫•y t·∫•t c·∫£ giao d·ªãch th·∫•t b·∫°i:', response.data.message);
    }
  } catch (error) {
    console.error('‚ùå L·ªói l·∫•y t·∫•t c·∫£ giao d·ªãch:', error.response?.data?.message || error.message);
  }
  console.log('');
}

// Test l·∫•y l·ªãch xe theo tr·∫°ng th√°i
async function testGetSchedulesByStatus() {
  console.log('üìÖ Test l·∫•y l·ªãch xe theo tr·∫°ng th√°i...');
  try {
    const response = await axios.get(`${BASE_URL}/schedules/status/cho_xac_nhan`, {
      headers: { Authorization: `Bearer ${authToken}` }
    });

    if (response.data.success) {
      console.log('‚úÖ L·∫•y l·ªãch xe theo tr·∫°ng th√°i th√†nh c√¥ng:', response.data.data.length, 'l·ªãch xe');
    } else {
      console.log('‚ùå L·∫•y l·ªãch xe theo tr·∫°ng th√°i th·∫•t b·∫°i:', response.data.message);
    }
  } catch (error) {
    console.error('‚ùå L·ªói l·∫•y l·ªãch xe theo tr·∫°ng th√°i:', error.response?.data?.message || error.message);
  }
  console.log('');
}

// Ch·∫°y t·∫•t c·∫£ test
async function runAllTests() {
  console.log('üöÄ B·∫Øt ƒë·∫ßu test API...\n');

  await testLogin();
  
  if (authToken) {
    await testGetProfile();
    await testGetGroups();
    await testGetGroupTransactions();
    await testGetGroupSchedules();
    await testCreateTransaction();
    await testGetAllTransactions();
    await testGetSchedulesByStatus();
    
    console.log('‚úÖ Ho√†n th√†nh t·∫•t c·∫£ test!');
  } else {
    console.log('‚ùå Kh√¥ng th·ªÉ test c√°c API kh√°c do ƒëƒÉng nh·∫≠p th·∫•t b·∫°i');
  }
}

// Ch·∫°y test n·∫øu file ƒë∆∞·ª£c g·ªçi tr·ª±c ti·∫øp
if (require.main === module) {
  runAllTests();
}

module.exports = { runAllTests };
